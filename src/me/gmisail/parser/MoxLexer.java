// Generated from Mox.g4 by ANTLR 4.7.2

    package me.gmisail.parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MoxLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, NAME=42, STRING=43, NUM=44, INT=45, FLOAT=46, 
		NEWLINE=47, WS=48;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
			"NAME", "STRING", "NUM", "INT", "FLOAT", "Digit", "ExponentPart", "HexDigit", 
			"HexExponentPart", "NEWLINE", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "')'", "'class'", "'end'", "'moduleNode'", "'var'", "':'", 
			"' = '", "'.'", "'new'", "'delete'", "'function'", "'->'", "','", "'return'", 
			"'if'", "'else if'", "'else'", "'while'", "'for'", "'in'", "'&'", "'|'", 
			"'~'", "'<<'", "'>>'", "'+'", "'-'", "'and'", "'or'", "'*'", "'/'", "'%'", 
			"'true'", "'false'", "'=='", "'>='", "'<='", "'!='", "'<'", "'>'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, "NAME", "STRING", "NUM", "INT", "FLOAT", 
			"NEWLINE", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MoxLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Mox.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\62\u0167\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3"+
		"\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b"+
		"\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3"+
		"\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\20\3"+
		"\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3"+
		"\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3"+
		"\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3"+
		"\32\3\32\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3"+
		"\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3"+
		"%\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3*\3*\3+\3+\7+\u0108\n+\f+\16+\u010b"+
		"\13+\3,\3,\7,\u010f\n,\f,\16,\u0112\13,\3,\3,\3-\3-\5-\u0118\n-\3.\6."+
		"\u011b\n.\r.\16.\u011c\3/\6/\u0120\n/\r/\16/\u0121\3/\3/\7/\u0126\n/\f"+
		"/\16/\u0129\13/\3/\5/\u012c\n/\3/\3/\6/\u0130\n/\r/\16/\u0131\3/\5/\u0135"+
		"\n/\3/\6/\u0138\n/\r/\16/\u0139\3/\3/\5/\u013e\n/\3\60\3\60\3\61\3\61"+
		"\5\61\u0144\n\61\3\61\6\61\u0147\n\61\r\61\16\61\u0148\3\62\3\62\3\63"+
		"\3\63\5\63\u014f\n\63\3\63\6\63\u0152\n\63\r\63\16\63\u0153\3\64\5\64"+
		"\u0157\n\64\3\64\3\64\6\64\u015b\n\64\r\64\16\64\u015c\3\64\3\64\3\65"+
		"\6\65\u0162\n\65\r\65\16\65\u0163\3\65\3\65\2\2\66\3\3\5\4\7\5\t\6\13"+
		"\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'"+
		"\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'"+
		"M(O)Q*S+U,W-Y.[/]\60_\2a\2c\2e\2g\61i\62\3\2\13\5\2C\\aac|\6\2\62;C\\"+
		"aac|\5\2\f\f\17\17$$\3\2\62;\4\2GGgg\4\2--//\5\2\62;CHch\4\2RRrr\5\2\13"+
		"\f\16\17\"\"\2\u0176\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2"+
		"\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3"+
		"\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2"+
		"\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2"+
		"\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2"+
		"\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2"+
		"\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q"+
		"\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2"+
		"\2\2\2g\3\2\2\2\2i\3\2\2\2\3k\3\2\2\2\5m\3\2\2\2\7o\3\2\2\2\tu\3\2\2\2"+
		"\13y\3\2\2\2\r\u0084\3\2\2\2\17\u0088\3\2\2\2\21\u008a\3\2\2\2\23\u008e"+
		"\3\2\2\2\25\u0090\3\2\2\2\27\u0094\3\2\2\2\31\u009b\3\2\2\2\33\u00a4\3"+
		"\2\2\2\35\u00a7\3\2\2\2\37\u00a9\3\2\2\2!\u00b0\3\2\2\2#\u00b3\3\2\2\2"+
		"%\u00bb\3\2\2\2\'\u00c0\3\2\2\2)\u00c6\3\2\2\2+\u00ca\3\2\2\2-\u00cd\3"+
		"\2\2\2/\u00cf\3\2\2\2\61\u00d1\3\2\2\2\63\u00d3\3\2\2\2\65\u00d6\3\2\2"+
		"\2\67\u00d9\3\2\2\29\u00db\3\2\2\2;\u00dd\3\2\2\2=\u00e1\3\2\2\2?\u00e4"+
		"\3\2\2\2A\u00e6\3\2\2\2C\u00e8\3\2\2\2E\u00ea\3\2\2\2G\u00ef\3\2\2\2I"+
		"\u00f5\3\2\2\2K\u00f8\3\2\2\2M\u00fb\3\2\2\2O\u00fe\3\2\2\2Q\u0101\3\2"+
		"\2\2S\u0103\3\2\2\2U\u0105\3\2\2\2W\u010c\3\2\2\2Y\u0117\3\2\2\2[\u011a"+
		"\3\2\2\2]\u013d\3\2\2\2_\u013f\3\2\2\2a\u0141\3\2\2\2c\u014a\3\2\2\2e"+
		"\u014c\3\2\2\2g\u015a\3\2\2\2i\u0161\3\2\2\2kl\7*\2\2l\4\3\2\2\2mn\7+"+
		"\2\2n\6\3\2\2\2op\7e\2\2pq\7n\2\2qr\7c\2\2rs\7u\2\2st\7u\2\2t\b\3\2\2"+
		"\2uv\7g\2\2vw\7p\2\2wx\7f\2\2x\n\3\2\2\2yz\7o\2\2z{\7q\2\2{|\7f\2\2|}"+
		"\7w\2\2}~\7n\2\2~\177\7g\2\2\177\u0080\7P\2\2\u0080\u0081\7q\2\2\u0081"+
		"\u0082\7f\2\2\u0082\u0083\7g\2\2\u0083\f\3\2\2\2\u0084\u0085\7x\2\2\u0085"+
		"\u0086\7c\2\2\u0086\u0087\7t\2\2\u0087\16\3\2\2\2\u0088\u0089\7<\2\2\u0089"+
		"\20\3\2\2\2\u008a\u008b\7\"\2\2\u008b\u008c\7?\2\2\u008c\u008d\7\"\2\2"+
		"\u008d\22\3\2\2\2\u008e\u008f\7\60\2\2\u008f\24\3\2\2\2\u0090\u0091\7"+
		"p\2\2\u0091\u0092\7g\2\2\u0092\u0093\7y\2\2\u0093\26\3\2\2\2\u0094\u0095"+
		"\7f\2\2\u0095\u0096\7g\2\2\u0096\u0097\7n\2\2\u0097\u0098\7g\2\2\u0098"+
		"\u0099\7v\2\2\u0099\u009a\7g\2\2\u009a\30\3\2\2\2\u009b\u009c\7h\2\2\u009c"+
		"\u009d\7w\2\2\u009d\u009e\7p\2\2\u009e\u009f\7e\2\2\u009f\u00a0\7v\2\2"+
		"\u00a0\u00a1\7k\2\2\u00a1\u00a2\7q\2\2\u00a2\u00a3\7p\2\2\u00a3\32\3\2"+
		"\2\2\u00a4\u00a5\7/\2\2\u00a5\u00a6\7@\2\2\u00a6\34\3\2\2\2\u00a7\u00a8"+
		"\7.\2\2\u00a8\36\3\2\2\2\u00a9\u00aa\7t\2\2\u00aa\u00ab\7g\2\2\u00ab\u00ac"+
		"\7v\2\2\u00ac\u00ad\7w\2\2\u00ad\u00ae\7t\2\2\u00ae\u00af\7p\2\2\u00af"+
		" \3\2\2\2\u00b0\u00b1\7k\2\2\u00b1\u00b2\7h\2\2\u00b2\"\3\2\2\2\u00b3"+
		"\u00b4\7g\2\2\u00b4\u00b5\7n\2\2\u00b5\u00b6\7u\2\2\u00b6\u00b7\7g\2\2"+
		"\u00b7\u00b8\7\"\2\2\u00b8\u00b9\7k\2\2\u00b9\u00ba\7h\2\2\u00ba$\3\2"+
		"\2\2\u00bb\u00bc\7g\2\2\u00bc\u00bd\7n\2\2\u00bd\u00be\7u\2\2\u00be\u00bf"+
		"\7g\2\2\u00bf&\3\2\2\2\u00c0\u00c1\7y\2\2\u00c1\u00c2\7j\2\2\u00c2\u00c3"+
		"\7k\2\2\u00c3\u00c4\7n\2\2\u00c4\u00c5\7g\2\2\u00c5(\3\2\2\2\u00c6\u00c7"+
		"\7h\2\2\u00c7\u00c8\7q\2\2\u00c8\u00c9\7t\2\2\u00c9*\3\2\2\2\u00ca\u00cb"+
		"\7k\2\2\u00cb\u00cc\7p\2\2\u00cc,\3\2\2\2\u00cd\u00ce\7(\2\2\u00ce.\3"+
		"\2\2\2\u00cf\u00d0\7~\2\2\u00d0\60\3\2\2\2\u00d1\u00d2\7\u0080\2\2\u00d2"+
		"\62\3\2\2\2\u00d3\u00d4\7>\2\2\u00d4\u00d5\7>\2\2\u00d5\64\3\2\2\2\u00d6"+
		"\u00d7\7@\2\2\u00d7\u00d8\7@\2\2\u00d8\66\3\2\2\2\u00d9\u00da\7-\2\2\u00da"+
		"8\3\2\2\2\u00db\u00dc\7/\2\2\u00dc:\3\2\2\2\u00dd\u00de\7c\2\2\u00de\u00df"+
		"\7p\2\2\u00df\u00e0\7f\2\2\u00e0<\3\2\2\2\u00e1\u00e2\7q\2\2\u00e2\u00e3"+
		"\7t\2\2\u00e3>\3\2\2\2\u00e4\u00e5\7,\2\2\u00e5@\3\2\2\2\u00e6\u00e7\7"+
		"\61\2\2\u00e7B\3\2\2\2\u00e8\u00e9\7\'\2\2\u00e9D\3\2\2\2\u00ea\u00eb"+
		"\7v\2\2\u00eb\u00ec\7t\2\2\u00ec\u00ed\7w\2\2\u00ed\u00ee\7g\2\2\u00ee"+
		"F\3\2\2\2\u00ef\u00f0\7h\2\2\u00f0\u00f1\7c\2\2\u00f1\u00f2\7n\2\2\u00f2"+
		"\u00f3\7u\2\2\u00f3\u00f4\7g\2\2\u00f4H\3\2\2\2\u00f5\u00f6\7?\2\2\u00f6"+
		"\u00f7\7?\2\2\u00f7J\3\2\2\2\u00f8\u00f9\7@\2\2\u00f9\u00fa\7?\2\2\u00fa"+
		"L\3\2\2\2\u00fb\u00fc\7>\2\2\u00fc\u00fd\7?\2\2\u00fdN\3\2\2\2\u00fe\u00ff"+
		"\7#\2\2\u00ff\u0100\7?\2\2\u0100P\3\2\2\2\u0101\u0102\7>\2\2\u0102R\3"+
		"\2\2\2\u0103\u0104\7@\2\2\u0104T\3\2\2\2\u0105\u0109\t\2\2\2\u0106\u0108"+
		"\t\3\2\2\u0107\u0106\3\2\2\2\u0108\u010b\3\2\2\2\u0109\u0107\3\2\2\2\u0109"+
		"\u010a\3\2\2\2\u010aV\3\2\2\2\u010b\u0109\3\2\2\2\u010c\u0110\7$\2\2\u010d"+
		"\u010f\n\4\2\2\u010e\u010d\3\2\2\2\u010f\u0112\3\2\2\2\u0110\u010e\3\2"+
		"\2\2\u0110\u0111\3\2\2\2\u0111\u0113\3\2\2\2\u0112\u0110\3\2\2\2\u0113"+
		"\u0114\7$\2\2\u0114X\3\2\2\2\u0115\u0118\5[.\2\u0116\u0118\5]/\2\u0117"+
		"\u0115\3\2\2\2\u0117\u0116\3\2\2\2\u0118Z\3\2\2\2\u0119\u011b\5_\60\2"+
		"\u011a\u0119\3\2\2\2\u011b\u011c\3\2\2\2\u011c\u011a\3\2\2\2\u011c\u011d"+
		"\3\2\2\2\u011d\\\3\2\2\2\u011e\u0120\5_\60\2\u011f\u011e\3\2\2\2\u0120"+
		"\u0121\3\2\2\2\u0121\u011f\3\2\2\2\u0121\u0122\3\2\2\2\u0122\u0123\3\2"+
		"\2\2\u0123\u0127\7\60\2\2\u0124\u0126\5_\60\2\u0125\u0124\3\2\2\2\u0126"+
		"\u0129\3\2\2\2\u0127\u0125\3\2\2\2\u0127\u0128\3\2\2\2\u0128\u012b\3\2"+
		"\2\2\u0129\u0127\3\2\2\2\u012a\u012c\5a\61\2\u012b\u012a\3\2\2\2\u012b"+
		"\u012c\3\2\2\2\u012c\u013e\3\2\2\2\u012d\u012f\7\60\2\2\u012e\u0130\5"+
		"_\60\2\u012f\u012e\3\2\2\2\u0130\u0131\3\2\2\2\u0131\u012f\3\2\2\2\u0131"+
		"\u0132\3\2\2\2\u0132\u0134\3\2\2\2\u0133\u0135\5a\61\2\u0134\u0133\3\2"+
		"\2\2\u0134\u0135\3\2\2\2\u0135\u013e\3\2\2\2\u0136\u0138\5_\60\2\u0137"+
		"\u0136\3\2\2\2\u0138\u0139\3\2\2\2\u0139\u0137\3\2\2\2\u0139\u013a\3\2"+
		"\2\2\u013a\u013b\3\2\2\2\u013b\u013c\5a\61\2\u013c\u013e\3\2\2\2\u013d"+
		"\u011f\3\2\2\2\u013d\u012d\3\2\2\2\u013d\u0137\3\2\2\2\u013e^\3\2\2\2"+
		"\u013f\u0140\t\5\2\2\u0140`\3\2\2\2\u0141\u0143\t\6\2\2\u0142\u0144\t"+
		"\7\2\2\u0143\u0142\3\2\2\2\u0143\u0144\3\2\2\2\u0144\u0146\3\2\2\2\u0145"+
		"\u0147\5_\60\2\u0146\u0145\3\2\2\2\u0147\u0148\3\2\2\2\u0148\u0146\3\2"+
		"\2\2\u0148\u0149\3\2\2\2\u0149b\3\2\2\2\u014a\u014b\t\b\2\2\u014bd\3\2"+
		"\2\2\u014c\u014e\t\t\2\2\u014d\u014f\t\7\2\2\u014e\u014d\3\2\2\2\u014e"+
		"\u014f\3\2\2\2\u014f\u0151\3\2\2\2\u0150\u0152\5_\60\2\u0151\u0150\3\2"+
		"\2\2\u0152\u0153\3\2\2\2\u0153\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154"+
		"f\3\2\2\2\u0155\u0157\7\17\2\2\u0156\u0155\3\2\2\2\u0156\u0157\3\2\2\2"+
		"\u0157\u0158\3\2\2\2\u0158\u015b\7\f\2\2\u0159\u015b\7\17\2\2\u015a\u0156"+
		"\3\2\2\2\u015a\u0159\3\2\2\2\u015b\u015c\3\2\2\2\u015c\u015a\3\2\2\2\u015c"+
		"\u015d\3\2\2\2\u015d\u015e\3\2\2\2\u015e\u015f\b\64\2\2\u015fh\3\2\2\2"+
		"\u0160\u0162\t\n\2\2\u0161\u0160\3\2\2\2\u0162\u0163\3\2\2\2\u0163\u0161"+
		"\3\2\2\2\u0163\u0164\3\2\2\2\u0164\u0165\3\2\2\2\u0165\u0166\b\65\2\2"+
		"\u0166j\3\2\2\2\26\2\u0109\u0110\u0117\u011c\u0121\u0127\u012b\u0131\u0134"+
		"\u0139\u013d\u0143\u0148\u014e\u0153\u0156\u015a\u015c\u0163\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}